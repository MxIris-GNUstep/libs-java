INSTALLATION INSTRUCTIONS
=========================

To have the full functionality, follow all the steps; in the
exceptional case that you don't need a shared objective-C runtime
library, you can safely skip points 0) and 1) to obtain a JIGS library
with reduced functionality.  I strongly suggest using a shared
objective-C runtime which gives you so much more possibilities of
having fun.  Please refer to the README for more information.

0) You need a libobjc compiled as a shared library: get the latest gcc
snapshot, unpack it and follow the instructions:

tar xfvz egcs-20000703.tar.gz 
mkdir build-egcs
cd build-egcs
../egcs-20000703/configure --enable-shared --prefix=/opt/gcc
make

(replace egcs-20000703 with the snapshot you are using, and the
argument of --prefix with a directory you may want to install to).
[FIXME: for snapshots before the 2000xxxx (for any snapshot as of today,
31 Jul 2000), please edit the file egcs-20000703/libobjc/Makefile.in
and remove NXConstStr.lo from the list of OBJS, otherwise you will not
be able to use your shared libobjc with GNUstep.  But - this gives problems 
when configuring GNUstep, since some tests fail.  You may want to configure 
GNUstep using the static libobjc, and then compile it using the shared
libobjc.]

At this point, instead of installing everything, you may want to install 
only the shared libobjc: 

{in the directory build-egcs}
cd i686-pc-linux/libobjc
cd .libs
su
{type in root password}
cp libobjc.so.* /usr/lib/gcc-lib/i386-linux/2.95.2/
exit

(Please use the obvious adaptations for your system).
If everything looks nice, you may want to take a precautionary measure
by moving the static libobjc where it can't be found, so that you are
sure the shared libobjc is always used when compiling objective-C:

su
{type in root password}
cd /usr/lib/gcc-lib/i386/i386-linux/2.95.2/
mv libobjc.a libobjc.a.old
exit

Run ldconfig: 
su
{type in root password}
ldconfig
exit

You will now need to recompile any Objective-C binary.

1) Recompile and reinstall GNUstep from scratch.  The shared libobjc
should be used.  Make sure everything works fine before going on.
Please note that you need a recent gnustep-make package (GNUstep 0.6.6
at least) to build and use JIGS.

2) Make sure your java environment is well configured.  
At least one of the following should be true: 
  
  * typing 'javac' at the shell prompt should run the java compiler
  (ie, you have set up your PATH environment variable);

  * $JAVA_HOME or $JDK_HOME are set to the base of your java development
  environment distribution (so that for example javac would be located in
  $JAVA_HOME/bin/javac).  

[Please note that you may switch at any time to a different Java environment
simply by resetting the old shell variables to new values appropriate for
the new environment.  You do not need to recompile or reinstall JIGS nor any
GNUstep based java packages or apps.]

3) Compile JIGS: 

make 

4) Install JIGS: 

  * Become root, then type:

    make install

5) Play with JIGS.  The directory Examples/ contains examples of JIGS
in action.  You probably want to have a look at WrapCreator and its
examples, which you find in Tools/WrapCreator/.  The directory
Wrappers contains a first attempt at a wrapper for the gnustep base
library.


