The Makefiles in this directory are used when you want to start a Java
Virtual Machine from inside an Objective-C program.  You don't need these to
do the reverse, ie to access Objective-C from Java.

SUPPORTED PLATFORMS
===================

Should work out of the box on Sun's JDK 1.2.2 and Sun's JDK 1.3.0.  It
should not be difficult to port to other platforms; just figure out
the flags for your Java platform, and send them to me
(n.pero@mi.flashnet.it) so I can include them in next release of these
files.  You need to figure out which libraries you need to link
against in order to start a Java virtual machine on your platform.  A
good start could be to look at the `java' or `java_vm' executable, run
`ldd' on it, and spy the libraries used in that executable.


INSTRUCTIONS
============

1. Source the GNUstep-Java.sh script

Before playing with this, you need to source the GNUstep-Java.sh
script:

. $(GNUSTEP_MAKEFILES)/GNUstep-Java.sh

The script will set up your library path so that the linker can find
your Java libraries.

2. Include jigs.make in your GNUmakefile, by adding

include $(GNUSTEP_MAKEFILES)/jigs.make

to the GNUmakefile for your Objective-C program.

3. Use the NSJavaVirtualMachine etc facilities to start a Java Virtual
Machine and running code in that (see Testing/Objc for examples)

4. You should be able to compile and run the code normally.  Warning: you
need to source GNUstep-Java.sh before *running* the programs as well.
